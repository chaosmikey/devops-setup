---
- name: Install software
  package: name={{ item }} state=present
  with_items:
    - zsh
- name: Check Homebrew is installed
  stat: path=/usr/local/bin/brew
  register: brew_installed

- name: Install Homebrew
  shell: ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
  when: brew_installed.stat.exists == false

- name: Instal required Homebrew Taps
  shell: brew tap {{ item }}
  with_items: "{{brew_taps}}"

- name: Check homebrew-cask is installed
  stat: path=/usr/local/bin/brew-cask.rb
  register: brew_cask_installed

- name: Install homebrew-cask
  shell: brew tap caskroom/cask
  when: brew_cask_installed.stat.exists == false

    ### UTILS

# - name: Install libraries/utils with homebrew
#   homebrew: name={{ item }} state=present
#   with_items: "{{applications}}"

- name: Cleanup after brewing
  shell: brew cleanup

    ### APPZ

# - name: Check for installed apps(casks)
#   shell: brew cask list | grep {{ item }}
#   register: installed_applications
#   with_items: "{{applications}}"
#   ignore_errors: true
#
# - name: Install Apps with brew-cask
#   shell: brew cask install {{ item }}
#   with_items: "{{applications}}"
#   when: "{{ item not in installed_applications.results|map(attribute='stdout') }}"

# Caveats: megasync only works if called from /Applications
- name: Linking MEGASync with brew-cask
  shell: ln -s '/opt/homebrew-cask/Caskroom/megasync/latest/MEGAsync.app' '/Applications/MEGAsync.app'
  when: "'megasync' in applications"
  ignore_errors: true # hacky


### ZSH radness

# - name: Set zsh shell
#   shell: 'chsh -s $(which zsh)'

# - name: Get current Terminal profile.
#   shell: defaults read com.apple.Terminal 'Default Window Settings'
#   register: terminal_theme
#   changed_when: false
#
# - name: Ensure custom Terminal profile is added.
#   shell: open files/Solarized-Dark.terminal
#   changed_when: false
#   when: "'Solarized-Dark' not in terminal_theme.stdout"
#
# - name: Ensure custom Terminal profile is set as default.
#   shell: "{{ item }}"
#   with_items:
#     - defaults write com.apple.Terminal 'Default Window Settings' -string 'Solarized-Dark'
#     - defaults write com.apple.Terminal 'Startup Window Settings' -string 'Solarized-Dark'
#   changed_when: false
#   when: "'Solarized Dark ansi' not in terminal_theme.stdout"
#
- name: Use GNU tools instead of osx counterparts (grep find etc)
  shell: echo 'export PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH' >> ~/.zshrc


- name: Install oh-my-zsh
  git: repo=https://github.com/robbyrussell/oh-my-zsh dest=~/.oh-my-zsh
  sudo: false
  tags: install_oh_my_zsh


### OSX SETTINGS
- name: Configure System Settings
  script: scripts/system_settings.sh
  sudo: true



### DOTFILES

- name: Check rcm is installed
  stat: path=/usr/local/bin/rcup
  register: rcm_installed

- name: Install rcm for dotfiles management
  shell: brew tap thoughtbot/formulae && brew install rcm
  when: rcm_installed.stat.exists == false

- name: Check ~/src dir exists
  stat: path=~/src/
  register: src_dir_exists

- name: Assures ~/src dir exists
  file: path=~/src state=directory

- name: Assures ~/src/thoughtbot dir exists
  file: path=~/src/thoughtbot state=directory

- name: Install thoughtbot/dotfiles
  git: repo=https://github.com/thoughtbot/dotfiles.git dest=~/src/thoughtbot/dotfiles

- name: Link ~/dotfiles to ~/src/thoughtbot/dotfiles
  file: dest=~/dotfiles
        src=~/src/thoughtbot/dotfiles
        state=link
        force=yes

- name: Assures ~/src/{{ dotfiles_repo_username }} dir exists
  file: path=~/src/{{ dotfiles_repo_username }} state=directory

- name: Install {{ dotfiles_repo_username }}/dotfiles
  git: repo=https://github.com/{{ dotfiles_repo_username }}/dotfiles.git dest=~/src/{{ dotfiles_repo_username }}/dotfiles

- name: Link ~/dotfiles-local to ~/src/{{ dotfiles_repo_username }}/dotfiles
  file: dest=~/dotfiles-local
        src=~/src/{{ dotfiles_repo_username }}/dotfiles
        state=link
        force=yes

- name: Generate dotfiles with rcup
  shell: env RCRC=~/dotfiles/rcrc rcup -B 0 -f
- name: Make zsh the default shell
  shell: dscl . -create /Users/$USER UserShell /usr/local/bin/zsh
  become: true

## POST INSTALL STEPS / Cask gotchas
#
# require manual intervention!
#

- name: Run Little Snitch Installer
  shell: open /opt/homebrew-cask/Caskroom/little-snitch/3.5.3/Little\ Snitch\ Installer.app
  when: "'little-snitch' in applications"

- name: Run Monolingual
  shell: open ~/Applications/Monolingual.app
  when: "'monolingual' in applications"
